@model Dsana.Models.DTask
@using Dsana.Models.Enums
@using Dsana.Services.Interfaces
@using Microsoft.AspNetCore.Identity

@inject UserManager<DSUser> UserManager
@inject IDSProjectService ProjectService
@inject IDSDTaskHistoryService HistoryService
@inject IDSFileService FileService




@{ ViewData["Title"] = "Details";

                DSUser btUser = await UserManager.GetUserAsync(User);
                DSUser projectManager = await ProjectService.GetProjectManagerAsync(Model.ProjectId);
}

<div class="row d-flex">
    <div class="w-50 text-center mx-auto">
        <h1>Task Details</h1>
    </div>
</div>

@if (!string.IsNullOrEmpty(Model.DeveloperUserId))
{
    <a href="javascript:void(0);">
        @if (Model.DeveloperUser?.AvatarFileData != null)
        {
            <img class="media-object" src="data:image/*;base64,@(Convert.ToBase64String(btUser.AvatarFileData))" alt="" /> }
        else
        {
            <img class="media-object" src="https://cdn.icon-icons.com/icons2/1378/PNG/512/avatardefault_92824.png" alt="" style="width:30px;height:30px" />
        }
    </a>
    <span class="text-muted" style="font-size: x-small">
        Assigned To: <strong>@Model.DeveloperUser.FullName</strong>
    </span>
}

<div>
    <div class="container-fluid overflow">
        <div class="row gy-2">
            <div class="col-md-12 col">
                <div class="row col-cols-2 mt-5">
                    <div class="card col m-1 p-2">
                        @*Header card*@
                        <div class="card-body">
                            <h5>@Model.Title</h5>
                            
                            <p>@Model.Description</p>
                            <div class="progress-container progress-info m-b-25">
                                @*Name and information*@
                                <span class="progress-badge" style="font-size:small">Project: @Model.Project.Name</span>
                                <div class="progress">
                                    @*Progress bar *@

                                    @{ var start = Model.Project.StartDate.DateTime;
                                        var end = Model.Project.EndDate.DateTime;
                                        var today = DateTime.Now;
                                        var percent = today >= end ? 100 : today < start ? 0 : Math.Round((today.Subtract(start)) / (end.Subtract(start)) * 100); }
                                    
                                    <div class="progress-bar" role="progressbar" aria-valuenow="30" aria-valuemin="0" aria-valuemax="100" style="width: @percent%;">
                                        
                                        <span class="progress-value">@percent%</span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="card col m-1 p-2">
                        <div class="card-body">
                            <ul class="list-unstyled">
                                
                                <li><strong>Date Entered:</strong> <span class="">  @Model.Created.ToString("dd MMM, yyyy")</</span></li>
                                <li><strong>Deadline:</strong> <span class="">  @Model.Created.ToString("dd MMM, yyyy")</</span></li>
                                <li><strong>Type:</strong> <span class="">  @Model.DTaskType.Name</span></li>
                                <li><strong>Priority:</strong> <span class="">  @Model.DTaskPriority.Name</span></li>
                                
                                <li><strong>Status:</strong> <span class="">  @Model.DTaskStatus.Name</span></li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>

            <a asp-action="Edit" asp-controller="DTasks" asp-route-id="@Model.Id">Edit Task</a>

            <div class="col-md-8 col col-cols-2 mt-5 ">
                <div class="col">
                    <div>
                        <div class="card m-1 p-2">
                            <h2>Comments</h2>
                            <div class="card-body" style="overflow-y:auto;height:600px;">

                                @*comments*@

                                <form class="form-horizontal form-bordered" asp-action="AddDTaskComment" asp-controller="DTasks" method="post">
                                    <input type="hidden" asp-for="Id" name="DTaskId" />
                                    @if (Model.DeveloperUserId == btUser.Id || Model.OwnerUserId == btUser.Id || projectManager?.Id == btUser.Id || User.IsInRole(nameof(Roles.Admin)))
                                    {
                        <div class="form-group">
                            <textarea asp-for="@(new DTaskComment().Comment)" rows="8" class="form-control" required placehoder="Add comment..."></textarea>
                        </div>
                                        <button class="btn btn-sm btn-primary">Submit</button> }
                                                    else
                                                    {
                                        <div class="form-group">
                                            <textarea disabled asp-for="@(new DTaskComment().Comment)" rows="8" class="form-control" required placehoder="Add comment..."></textarea>
                                        </div>}
                                </form>
                                <hr />
                                <h6>Comments</h6>
                                <ul class="right_chat list-unstyled mb-0">


                                    @*Loop to show comments made for taskask*@
                                    @foreach (DTaskComment comment in Model.Comments)
                                    {
                        <li class="online mb-4">


                            <div class="media">
                                <a href="javascript:void(0);">
                                    @if (btUser?.AvatarFileData != null)
                                    {
                    <img class="media-object" src="data:image/*;base64,@(Convert.ToBase64String(btUser.AvatarFileData))" alt="" /> }
                else
                {
        <img class="media-object" src="https://cdn.icon-icons.com/icons2/1378/PNG/512/avatardefault_92824.png" alt="" style="width:30px;height:30px" />}
                                </a>
                                <div class="media-body">
                                    <span class="text-muted" style="font-size: x-small">
                                        @@ @comment.user.FullName
                                        <small class="float-right">@comment.Created.ToString("MM.dd.yyyy h:ss tt")</small>
                                    </span>
                                </div>
                                <span class="message text-primary">@Html.Raw(comment.Comment)</span>
                            </div>
                        </li>}
                                </ul>
                            </div>
                            @*<div class="card-footer">*@
                            @*</div>*@
                        </div>
                    </div>
                </div>
                <div class="col">
                    <div>
                        <div class="card m-1 p-2">
                            @*<div class="card-header">*@
                            <h2>Attachments</h2>
                            @*</div>*@
                            <div class="card-body" style="overflow-y:auto;height:300px;">
                                <div class="row clearfix">
                                    <div>
                                        <form asp-action="AddDTaskAttachment" asp-controller="DTasks" enctype="multipart/form-data" method="post">
                                            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                                            <input type="hidden" asp-for="@Model.Id" name="DTaskId">
                                            <div class="media-body ml-3">
                                                <label>
                                                    Description
                                                    <input asp-for="@Model.Attachments.FirstOrDefault().Description" type="text" class="form-control" />
                                                </label><br />
                                                <label class="btn btn-outline-primary btn-sm">
                                                    <input asp-for="@Model.Attachments.FirstOrDefault().FormFile" type="file" class="form-control-file" />
                                                </label>
                                                <button type="submit" class="btn btn-outline-secondary btn-sm md-btn-flat">Submit</button>
                                            </div>
                                        </form>
                                    </div>
                                </div>

                                <hr />




                                @*<h6>Attachments</h6>
                                <div class="container">
                                    <div class="row">
                                        @foreach (DTaskAttachment item in Model.Attachments)
                                        {
                            <div class="col col-sm-2">
                                <a asp-action="ShowFile" asp-controller="DTasks" asp-route-Id="@item.Id">
                                    <div class="icon">
                                        <img src="@FileService.GetFileIcon(item.FileName)" style="height:50px;width:50px" data-bs-toggle="tooltip" data-bs-placement="top" title="" data-bs-original-title="@item.FileName" />
                                    </div>
                                </a>
                                <div style="font-size:x-small">
                                    <div class="file-name">
                                        <strong>@item.Description</strong>
                                    </div>
                                    <small>Size: @FileService.FormatFileSize(item.FileData.Length) </small>
                                </div>
                            </div>}
                                    </div>
                                </div>*@



                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-4 col mt-5 ">
                <div>
                    <div class="card m-1 p-2">
                        <h2>History</h2>

                        <div class="card-body" style="overflow-y:auto;height:1000px">

                            @*@foreach(DTaskHistory history in await HistoryService.GetProjectDTaskHistoriesAsync(Model.Id, btUser.CompanyID))*@
                            
                            @foreach (DTaskHistory history in Model.History.Reverse())
                            {
                <div class="">
                    
                    <h6>@history.Description</h6>
                    <span>By: <a href="" title="@history.User.FullName">@history.User.FullName</a></span>
                    <div class="">
                        @if (history.Description.Contains("DTask Created"))
                        {
                            <span class="date" style="font-weight:bold; color: orange">Created @history.Created.ToString("dd MMM yyy") by @history.User.FullName</span>
                        }
                        else if (history.Property.Equals("DTaskComment"))
                        {
                            <p>@history.User commented</p>
                        }
                        else if (history.Property.Equals("DTaskAttachment"))
                        {
                            <p>@history.User attached file.</p>
                        }
                        else
                        {
        @*<p>The dtask <b>@history.Property</b> was edited</p>*@
                            @*<p>@($"{history.Property}: {history.OldValue}")</p>*@
                                                <p>@($"{history.Property} : {history.NewValue}")</p>
                         }
                    
                    </div>
                </div>}

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>